// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PrimeiraAPI.Infra;

#nullable disable

namespace PrimeiraAPI.Migrations
{
    [DbContext(typeof(ConnectionContext))]
    [Migration("20250119200612_new-1901")]
    partial class new1901
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PrimeiraAPI.Model.Deliveries", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeliveryId"));

                    b.Property<string>("ApprovalExecutionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApprovalExecutionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApprovalPrevisionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApprovalPrevisionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssistedOperationExecutionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssistedOperationExecutionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssistedOperationPrevisionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssistedOperationPrevisionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DevelopmentExecutionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DevelopmentExecutionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DevelopmentPrevisionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DevelopmentPrevisionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoLiveExecutionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoLiveExecutionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoLivePrevisionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GoLivePrevisionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HomologationExecutionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HomologationExecutionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HomologationPrevisionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HomologationPrevisionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpecFuncExecutionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpecFuncExecutionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpecFuncPrevisionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpecFuncPrevisionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestTIExecutionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestTIExecutionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestTIPrevisionEnd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestTIPrevisionStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeliveryId");

                    b.HasIndex("ProjectCode");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.FinancialLaunch", b =>
                {
                    b.Property<int>("IdSerial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSerial"));

                    b.Property<double>("CostValue")
                        .HasColumnType("double precision");

                    b.Property<int>("Hours")
                        .HasColumnType("integer");

                    b.Property<string>("LaunchMonth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdSerial");

                    b.ToTable("FinancialLaunch");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.ForecastProcess", b =>
                {
                    b.Property<int>("IDSerial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDSerial"));

                    b.Property<string>("ApliedApril")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedAugust")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedDecember")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedFebruary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedJanuary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedJuly")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedJune")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedMarch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedMay")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedNovember")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedOctober")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ApliedSeptember")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("ExecutionApril")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionAugust")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionDecember")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionFebruary")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionJanuary")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionJuly")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionJune")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionMarch")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionMay")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionNovember")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionOctober")
                        .HasColumnType("double precision");

                    b.Property<double>("ExecutionSeptember")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionApril")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionAugust")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionDecember")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionFebruary")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionJanuary")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionJuly")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionJune")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionMarch")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionMay")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionNovember")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionOctober")
                        .HasColumnType("double precision");

                    b.Property<double>("PrevisionSeptember")
                        .HasColumnType("double precision");

                    b.Property<string>("ProjectId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDSerial");

                    b.ToTable("ForecastProcess");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.HourlyCostHistory", b =>
                {
                    b.Property<int>("Identifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Identifier"));

                    b.Property<string>("DateBegins")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DateEnds")
                        .HasColumnType("text");

                    b.Property<decimal>("HourlyCost")
                        .HasColumnType("DECIMAL(10, 2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.HasKey("Identifier");

                    b.ToTable("HourlyCostHistory");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.Project", b =>
                {
                    b.Property<string>("ProjectCode")
                        .HasColumnType("text");

                    b.Property<double>("ApprovedCost")
                        .HasColumnType("double precision");

                    b.Property<string>("DevelopmentStat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DurationExpected")
                        .HasColumnType("integer");

                    b.Property<double>("EstimatedCost")
                        .HasColumnType("double precision");

                    b.Property<string>("ExpectedStart")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Idserial")
                        .HasColumnType("integer");

                    b.Property<string>("Observations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestingArea")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("TotalAccomplished")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalAvailable")
                        .HasColumnType("double precision");

                    b.HasKey("ProjectCode");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.User", b =>
                {
                    b.Property<int>("IdSerial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdSerial"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("HourlyCost")
                        .HasColumnType("double precision");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Responsibility")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecurityKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdSerial");

                    b.ToTable("EndUser");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.UserProject", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.HasKey("UserCode", "ProjectCode");

                    b.ToTable("UserProject");
                });

            modelBuilder.Entity("PrimeiraAPI.Model.Deliveries", b =>
                {
                    b.HasOne("PrimeiraAPI.Model.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
